#ifndef EVALUATION_H_INCLUDED
#define EVALUATION_H_INCLUDED

#include <array>

//units are in centipawns.

//mobility.

const int MOB_BISHOP_START = 5;
const int MOB_BISHOP_END = 13;

const int MOB_ROOK_START = 5;
const int MOB_ROOK_END = 6;

//order is king,queen,rook,bishop,knight,pawn.

static const std::array<int,6> PIECE_VALUES_START =
{{
    20000,
    803,
    304,
    240,
    248,
    74,
}};

static const std::array<int,6> PIECE_VALUES_END =
{{
    20000,
    1785,
    925,
    504,
    564,
    227,
}};

//piece-square tables.

static const std::array<std::array<int,64>,6> PIECE_TABLES_START =
{{
    {{
          0,  0,  0,  0,  0,  0,  0,-28,
          0,  2,  2,  0,  0,  2,  2, -2,
          1,  9,  8,  2,  2,  8, 10,  0,
          1,  9,  6,  3,  4,  8, 11, -1,
          0,  5,  4,  1,  7,  7, 16,-12,
         -1, -1, -1, -4,  1, -2, 16, -7,
         18,  8,-14,-39,-38,-39, 20, 40,
         -3, 58, 18,-42, -4,-70, 41, 47,
    }},
    {{
          0, 10, 14, 20, 23, 18, 14, 20,
        -21,-38,  6,  8, 24, 31,  5, 26,
        -22,-10, -2, 15, 34, 59, 61, 50,
        -21,-12, -4,  3, 22, 34, 38, 29,
        -22,-11,-14,-11, -7,  7,  5, 16,
        -26,-17,-10,-18,-15,-11, -2, -4,
        -29,-21,-11,-13,-12, -9,-16,-17,
        -28,-28,-19, -6,-16,-51,-28,-24,
    }},
    {{
         26, 24, 15, 18, 16, 14, 16, 24,
         19, 13, 34, 39, 38, 31, 23, 33,
          0, 29, 23, 38, 41, 38, 33, 23,
        -12, -3,  8, 24, 17, 26, 19, 21,
        -32,-26,-28,-21,-24,-18,  1, -8,
        -41,-34,-38,-31,-31,-31, -5,-23,
        -54,-36,-30,-29,-30,-16,-14,-31,
        -21,-16, -9,  0, -6, -7,  9,-13,
    }},
    {{
        -18,  0,-10, -9, -8,-10,  0, -9,
        -17, -4, -2, -3, -1,  2, -5, -1,
         -6,  7, 17, 14, 24, 26, 24, 18,
        -15,  4,  4, 34, 14, 20,  3,  4,
        -12, -4, -8,  2,  8,-15, -6,  0,
         -9, -4, -8,-10,-10, -8, -5,  8,
          3,  1,  0,-17,-16, -5, 14,  5,
          8,  5,-11,-29,-27,-13,-11, -8,
    }},
    {{
        -59,-39,-30, -8,  0,-20,  0,-50,
        -35,-20, 10, 19, 18, 14, -5,  0,
        -30,  6, 39, 50, 59, 49, 29,  6,
        -13,  4, 28, 36, 18, 49, 16, 20,
        -25, -4,  3,  1, 10,  5, 25,-11,
        -44,-21,-11,  3,  7, -4,-12,-34,
        -53,-43,-33,-17,-23,-17,-37,-34,
        -56,-36,-57,-40,-33,-34,-35,-61,
    }},
    {{
          0,  0,  0,  0,  0,  0,  0,  0,
        107,104, 96, 91, 77, 66, 55, 60,
        -30, 30, 43, 50, 55, 70, 40, -7,
        -32, -3,-11,  5, 22, 19, 17,-15,
        -34,-15,-18,-14, -3, -6, 10,-14,
        -31,-24,-25,-24, -8, -8, 18, -3,
        -33,-27,-39,-34,-34,  7, 30, -7,
          0,  0,  0,  0,  0,  0,  0,  0,
    }},
}};

static const std::array<std::array<int,64>,6> PIECE_TABLES_END =
{{
    {{
        -50, -6, -1,  0, -3, -8,  0,-49,
         -1, 13,  9,  2,  2,  8, 19, -2,
          6, 39, 45, 37, 32, 50, 46,  2,
          3, 33, 50, 49, 46, 46, 38, -5,
        -25, 16, 37, 43, 40, 29, 14,-25,
        -30, -5,  6, 20, 17,  6,-15,-33,
        -23,-22, -9, -9, -6, -2,-27,-55,
        -60,-44,-34,-59,-82,-30,-56,-122,
    }},
    {{
          2, 13, 19, 25, 30, 21, 14, 18,
         -9,  6, 10, 20, 33, 28, 10, 16,
        -15, -5, 11, 22, 36, 47, 34, 29,
        -21,  2,  3, 27, 40, 41, 35, 27,
        -17,  0,  4, 27, 24, 21, 11, 12,
        -23,-11, -2,-10,-13, -4,-10, -7,
        -27,-22,-46,-35,-45,-52,-36,-16,
        -31,-32,-39,-44,-47,-41,-23,-21,
    }},
    {{
         31, 33, 38, 35, 39, 39, 37, 40,
         31, 38, 39, 48, 47, 27, 26, 24,
         22, 14, 29, 21, 20, 31, 14, 16,
          8, 13, 18, 15, 13, 13,  7,  6,
        -12,  0,  4, -1, -2,  0, -2,-13,
        -36,-20,-22,-24,-23,-23,-16,-25,
        -46,-40,-31,-34,-34,-37,-28,-30,
        -40,-31,-25,-30,-29,-21,-29,-54,
    }},
    {{
          5,  7,  7, 15, 12,  0,  1, -6,
         -6, 10,  8,  8,  8,  7,  2, -5,
         10, 15,  2,  3,  8, 20, 20, 16,
          6, 13, -1, -6,  3,  4, 25, 14,
         -5,  0,  5, -5,-11,  1,  1,  0,
         -3,  0, -4, -5, -2,-13,-10,  1,
         -9,-22,-17,-10,-10,-21,-17,-24,
        -19,-12,-25,-15,-11,-18,-14,-18,
    }},
    {{
        -57,-17, -7, -4,  0,  1,-20,-50,
        -47,-22,  0, 26, 19,  0,-18,-39,
        -33,  4, 36, 39, 40, 48, 12,-17,
        -28, 13, 38, 59, 63, 51, 36, -3,
        -34,  2, 40, 50, 49, 45, 14,-15,
        -61,-17, -5, 20, 17, -5,-11,-50,
        -54,-33,-32,-16,-12,-31,-36,-53,
        -59,-83,-52,-42,-44,-52,-65,-58,
    }},
    {{
          0,  0,  0,  0,  0,  0,  0,  0,
        169,156,134,110, 93, 80, 88,102,
        116,105, 86, 62, 50, 43, 69, 66,
         18,  6, -7,-30,-39,-35,-15,-21,
        -16,-16,-42,-44,-45,-45,-34,-46,
        -29,-23,-41,-36,-34,-39,-35,-56,
        -17,-15,-20,-16,-11,-19,-27,-61,
          0,  0,  0,  0,  0,  0,  0,  0,
    }},
}};

#endif // EVALUATION_H_INCLUDED
