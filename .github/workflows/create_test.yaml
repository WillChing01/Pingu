name: "Create SPRT Test"

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  create_test:
    name: "STC"
    runs-on: ubuntu-latest
    env:
      DEV_BRANCH: ${{ github.head_ref }}
      BASE_BRANCH: master
    steps:
      - name: Checkout dev
        uses: actions/checkout@v4

      - name: Dev bench
        run: |
          make
          echo "DEV_BENCH=$(./Pingu bench | grep -oP '^(\d+) nodes \d+ nps' | awk '{print $1}')" >> $GITHUB_ENV
          make clean

      - name: Checkout base
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BASE_BRANCH }}

      - name: Base bench
        run: |
          make
          echo "BASE_BENCH=$(./Pingu bench | grep -oP '^(\d+) nodes \d+ nps' | awk '{print $1}')" >> $GITHUB_ENV
          make clean

      - name: Send request
        run: |
          DATA=$(jq -n \
            --arg dev_engine "Pingu" \
            --arg dev_repo "https://github.com/WillChing01/Pingu" \
            --arg dev_branch "$DEV_BRANCH" \
            --arg dev_bench "$DEV_BENCH" \
            --arg dev_options "Threads=1 Hash=8" \
            --arg dev_time_control "10.0+0.1" \
            --arg base_engine "Pingu" \
            --arg base_repo "https://github.com/WillChing01/Pingu" \
            --arg base_branch "$BASE_BRANCH" \
            --arg base_bench "$BASE_BENCH" \
            --arg base_options "Threads=1 Hash=8" \
            --arg base_time_control "10.0+0.1" \
            --arg book_name "Pohl.epd" \
            --arg upload_pgns "FALSE" \
            --arg test_mode "SPRT" \
            --arg test_bounds "$( [[ "$DEV_BRANCH" =~ ^feat/ ]] && echo '[0.00, 3.00]' || echo '[-5.00, 0.00]' )" \
            --arg test_confidence "[0.05, 0.05]" \
            --arg priority "0" \
            --arg throughput "1000" \
            --arg workload_size "32" \
            --arg syzygy_wdl "DISABLED" \
            --arg syzygy_adj "DISABLED" \
            --arg win_adj "movecount=3 score=400" \
            --arg draw_adj "movenumber=40 movecount=8 score=10" \
            --arg username "${{ secrets.username }}" \
            --arg password "${{ secrets.password }}" \
            --arg action "CREATE_TEST" \
            '{
              dev_engine: $dev_engine,
              dev_repo: $dev_repo,
              dev_branch: $dev_branch,
              dev_bench: $dev_bench,
              dev_network: "",
              dev_options: $dev_options,
              dev_time_control: $dev_time_control,

              base_engine: $base_engine,
              base_repo: $base_repo,
              base_branch: $base_branch,
              base_bench: $base_bench,
              base_network: "",
              base_options: $base_options,
              base_time_control: $base_time_control,

              book_name: $book_name,
              upload_pgns: $upload_pgns,
              test_mode: $test_mode,
              test_bounds: $test_bounds,
              test_confidence: $test_confidence,

              priority: $priority,
              throughput: $throughput,
              workload_size: $workload_size,
              syzygy_wdl: $syzygy_wdl,
              syzygy_adj: $syzygy_adj,
              win_adj: $win_adj,
              draw_adj: $draw_adj,

              username: $username,
              password: $password,
              action: $action
          }')
          echo "$DATA"
          curl -X POST "${{ secrets.url }}" -H "Content-Type: application/json" -d "$DATA"
